{"version":3,"file":"monthview.js","sourceRoot":"","sources":["../src/monthview.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnChanges, Input, Output, EventEmitter, SimpleChanges, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Slides } from 'ionic-angular';\n\nimport { ICalendarComponent, IEvent, IMonthView, IMonthViewRow, ITimeSelected, IRange, CalendarMode } from './calendar';\nimport { CalendarService } from './calendar.service';\n\n\nexport class MonthViewComponent implements ICalendarComponent, OnInit, OnChanges {\n     slider:Slides;\n\n     formatDay:string;\n     formatDayHeader:string;\n     formatMonthTitle:string;\n     eventSource:IEvent[];\n     startingDayMonth:number;\n     showEventDetail:boolean;\n     noEventsLabel:string;\n\n     onRangeChanged = new EventEmitter<IRange>();\n     onEventSelected = new EventEmitter<IEvent>();\n     onTimeSelected = new EventEmitter<ITimeSelected>();\n     onTitleChanged = new EventEmitter<string>();\n\n    public slideOption = {\n        runCallbacksOnInit: false,\n        loop: true\n    };\n    public views:IMonthView[] = [];\n    public currentViewIndex = 0;\n    public selectedDate:IMonthViewRow;\n    public range:IRange;\n    public mode:CalendarMode = 'month';\n    public direction = 0;\n\n    private moveOnSelected = false;\n    private inited = false;\n\n    constructor(private calendarService:CalendarService) {\n    }\n\n    ngOnInit() {\n        this.inited = true;\n        this.refreshView();\n\n        this.calendarService.currentDateChanged$.subscribe(currentDate => {\n            this.refreshView();\n        });\n    }\n\n    ngOnChanges(changes:SimpleChanges) {\n        if (!this.inited) return;\n\n        let eventSourceChange = changes['eventSource'];\n        if (eventSourceChange && eventSourceChange.currentValue) {\n            this.onDataLoaded();\n        }\n    }\n\n    onSlideChanged() {\n        let currentSlideIndex = this.slider.getActiveIndex(),\n            direction = 0,\n            currentViewIndex = this.currentViewIndex;\n\n        currentSlideIndex = (currentSlideIndex + 2) % 3;\n        if (currentSlideIndex - currentViewIndex === 1) {\n            direction = 1;\n        } else if (currentSlideIndex === 0 && currentViewIndex === 2) {\n            direction = 1;\n            this.slider.slideTo(1, 0, false);\n        } else if (currentViewIndex - currentSlideIndex === 1) {\n            direction = -1;\n        } else if (currentSlideIndex === 2 && currentViewIndex === 0) {\n            direction = -1;\n            this.slider.slideTo(3, 0, false);\n        }\n        this.currentViewIndex = currentSlideIndex;\n        this.move(direction);\n    }\n\n    move(direction:number) {\n        if (direction === 0) return;\n\n        this.direction = direction;\n        if (this.moveOnSelected) {\n            this.moveOnSelected = false;\n        } else {\n            let adjacentDate = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\n            this.calendarService.setCurrentDateWithoutEvent(adjacentDate);\n        }\n        this.refreshView();\n        this.direction = 0;\n    }\n\n    createDateObject(date:Date, format:string):IMonthViewRow {\n        return {\n            date: date,\n            events: [],\n            label: new DatePipe('en-US').transform(date, format),\n            secondary: false\n        };\n    }\n\n    static getDates(startDate:Date, n:number):Date[] {\n        let dates = new Array(n),\n            current = new Date(startDate.getTime()),\n            i = 0;\n        current.setHours(12); // Prevent repeated dates because of timezone bug\n        while (i < n) {\n            dates[i++] = new Date(current.getTime());\n            current.setDate(current.getDate() + 1);\n        }\n        return dates;\n    }\n\n    getViewData(startTime:Date):IMonthView {\n        let startDate = startTime,\n            date = startDate.getDate(),\n            month = (startDate.getMonth() + (date !== 1 ? 1 : 0)) % 12;\n\n        let dates = MonthViewComponent.getDates(startDate, 42);\n        let days:IMonthViewRow[] = [];\n        for (let i = 0; i < 42; i++) {\n            let dateObject = this.createDateObject(dates[i], this.formatDay);\n            dateObject.secondary = dates[i].getMonth() !== month;\n            days[i] = dateObject;\n        }\n\n        return {\n            dates: days\n        };\n    }\n\n    getHighlightClass(date:IMonthViewRow):string {\n        let className = '';\n\n        if (date.hasEvent) {\n            if (date.secondary) {\n                className = 'monthview-secondary-with-event';\n            } else {\n                className = 'monthview-primary-with-event';\n            }\n        }\n\n        if (date.selected) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-selected';\n        }\n\n        if (date.current) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-current';\n        }\n\n        if (date.secondary) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'text-muted';\n        }\n        return className;\n    }\n\n    getRange(currentDate:Date):IRange {\n        let year = currentDate.getFullYear(),\n            month = currentDate.getMonth(),\n            firstDayOfMonth = new Date(year, month, 1),\n            difference = this.startingDayMonth - firstDayOfMonth.getDay(),\n            numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : -difference,\n            startDate = new Date(firstDayOfMonth.getTime());\n\n        if (numDisplayedFromPreviousMonth > 0) {\n            startDate.setDate(-numDisplayedFromPreviousMonth + 1);\n        }\n\n        let endDate = new Date(startDate.getTime());\n        endDate.setDate(endDate.getDate() + 42);\n\n        return {\n            startTime: startDate,\n            endTime: endDate\n        };\n    }\n\n    onDataLoaded() {\n        let range = this.range,\n            eventSource = this.eventSource,\n            len = eventSource ? eventSource.length : 0,\n            startTime = range.startTime,\n            endTime = range.endTime,\n            utcStartTime = new Date(Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate())),\n            utcEndTime = new Date(Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate())),\n            currentViewIndex = this.currentViewIndex,\n            dates = this.views[currentViewIndex].dates,\n            oneDay = 86400000,\n            eps = 0.001;\n\n        for (let r = 0; r < 42; r += 1) {\n            if (dates[r].hasEvent) {\n                dates[r].hasEvent = false;\n                dates[r].events = [];\n            }\n        }\n\n        for (let i = 0; i < len; i += 1) {\n            let event = eventSource[i],\n                eventStartTime = new Date(event.startTime.getTime()),\n                eventEndTime = new Date(event.endTime.getTime()),\n                st:Date,\n                et:Date;\n\n            if (event.allDay) {\n                if (eventEndTime <= utcStartTime || eventStartTime >= utcEndTime) {\n                    continue;\n                } else {\n                    st = utcStartTime;\n                    et = utcEndTime;\n                }\n            } else {\n                if (eventEndTime <= startTime || eventStartTime >= endTime) {\n                    continue;\n                } else {\n                    st = startTime;\n                    et = endTime;\n                }\n            }\n\n            let timeDiff:number;\n            let timeDifferenceStart:number;\n            if (eventStartTime <= st) {\n                timeDifferenceStart = 0;\n            } else {\n                timeDiff = eventStartTime.getTime() - st.getTime();\n                if (!event.allDay) {\n                    timeDiff = timeDiff - (eventStartTime.getTimezoneOffset() - st.getTimezoneOffset()) * 60000;\n                }\n                timeDifferenceStart = timeDiff / oneDay;\n            }\n\n            let timeDifferenceEnd:number;\n            if (eventEndTime >= et) {\n                timeDiff = et.getTime() - st.getTime();\n                if (!event.allDay) {\n                    timeDiff = timeDiff - (et.getTimezoneOffset() - st.getTimezoneOffset()) * 60000;\n                }\n                timeDifferenceEnd = timeDiff / oneDay;\n            } else {\n                timeDiff = eventEndTime.getTime() - st.getTime();\n                if (!event.allDay) {\n                    timeDiff = timeDiff - (eventEndTime.getTimezoneOffset() - st.getTimezoneOffset()) * 60000;\n                }\n                timeDifferenceEnd = timeDiff / oneDay;\n            }\n\n            let index = Math.floor(timeDifferenceStart);\n            while (index < timeDifferenceEnd - eps) {\n                dates[index].hasEvent = true;\n                let eventSet = dates[index].events;\n                if (eventSet) {\n                    eventSet.push(event);\n                } else {\n                    eventSet = [];\n                    eventSet.push(event);\n                    dates[index].events = eventSet;\n                }\n                index += 1;\n            }\n        }\n\n        for (let r = 0; r < 42; r += 1) {\n            if (dates[r].hasEvent) {\n                dates[r].events.sort(this.compareEvent);\n            }\n        }\n\n        let findSelected = false;\n        for (let r = 0; r < 42; r += 1) {\n            if (dates[r].selected) {\n                this.selectedDate = dates[r];\n                findSelected = true;\n                break;\n            }\n            if (findSelected) {\n                break;\n            }\n        }\n    };\n\n    refreshView() {\n        this.range = this.getRange(this.calendarService.currentDate);\n        let title = this.getTitle();\n        this.onTitleChanged.emit(title);\n\n        this.calendarService.populateAdjacentViews(this);\n        this.updateCurrentView(this.range.startTime, this.views[this.currentViewIndex]);\n        this.calendarService.rangeChanged(this);\n    }\n\n    getTitle():string {\n        let currentViewStartDate = this.range.startTime,\n            date = currentViewStartDate.getDate(),\n            month = (currentViewStartDate.getMonth() + (date !== 1 ? 1 : 0)) % 12,\n            year = currentViewStartDate.getFullYear() + (date !== 1 && month === 0 ? 1 : 0),\n            headerDate = new Date(year, month, 1);\n        return new DatePipe(undefined).transform(headerDate, this.formatMonthTitle);\n    }\n\n    private compareEvent(event1:IEvent, event2:IEvent):number {\n        if (event1.allDay) {\n            return 1;\n        } else if (event2.allDay) {\n            return -1;\n        } else {\n            return (event1.startTime.getTime() - event2.startTime.getTime());\n        }\n    }\n\n    select(selectedDate:Date, events:IEvent[]) {\n        if (!this.views) return;\n\n        let dates = this.views[this.currentViewIndex].dates,\n            currentCalendarDate = this.calendarService.currentDate,\n            currentMonth = currentCalendarDate.getMonth(),\n            currentYear = currentCalendarDate.getFullYear(),\n            selectedMonth = selectedDate.getMonth(),\n            selectedYear = selectedDate.getFullYear(),\n            direction = 0;\n\n        if (currentYear === selectedYear) {\n            if (currentMonth !== selectedMonth) {\n                direction = currentMonth < selectedMonth ? 1 : -1;\n            }\n        } else {\n            direction = currentYear < selectedYear ? 1 : -1;\n        }\n\n        this.calendarService.setCurrentDateWithoutEvent(selectedDate);\n        if (direction === 0) {\n            let currentViewStartDate = this.range.startTime,\n                oneDay = 86400000,\n                selectedDayDifference = Math.floor((selectedDate.getTime() - currentViewStartDate.getTime()) / oneDay);\n            for (let r = 0; r < 42; r += 1) {\n                dates[r].selected = false;\n            }\n\n            if (selectedDayDifference >= 0 && selectedDayDifference < 42) {\n                dates[selectedDayDifference].selected = true;\n                this.selectedDate = dates[selectedDayDifference];\n            }\n        } else {\n            this.moveOnSelected = true;\n            this.slideView(direction);\n        }\n\n        this.onTimeSelected.emit({selectedTime: selectedDate, events: events});\n    }\n\n    slideView(direction:number) {\n        if (direction === 1) {\n            this.slider.slideNext();\n        } else if (direction === -1) {\n            this.slider.slidePrev();\n        }\n    }\n\n    updateCurrentView(currentViewStartDate:Date, view:IMonthView) {\n        let currentCalendarDate = this.calendarService.currentDate,\n            today = new Date(),\n            oneDay = 86400000,\n            selectedDayDifference = Math.floor((currentCalendarDate.getTime() - currentViewStartDate.getTime()) / oneDay),\n            currentDayDifference = Math.floor((today.getTime() - currentViewStartDate.getTime()) / oneDay);\n\n        for (let r = 0; r < 42; r += 1) {\n            view.dates[r].selected = false;\n        }\n\n        if (selectedDayDifference >= 0 && selectedDayDifference < 42) {\n            view.dates[selectedDayDifference].selected = true;\n            this.selectedDate = view.dates[selectedDayDifference];\n        } else {\n            this.selectedDate = {\n                date: null,\n                events: [],\n                label: null,\n                secondary: null\n            };\n        }\n\n        if (currentDayDifference >= 0 && currentDayDifference < 42) {\n            view.dates[currentDayDifference].current = true;\n        }\n    }\n\n    eventSelected(event:IEvent) {\n        this.onEventSelected.emit(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'monthview',\n    template: `\n        <div>\n            <ion-slides #monthSlider [options]=\"slideOption\" (ionDidChange)=\"onSlideChanged()\">\n                <ion-slide *ngFor=\"let view of views; let viewIndex=index\">\n                    <table *ngIf=\"viewIndex===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr>\n                            <th *ngFor=\"let day of view.dates.slice(0,7)\">\n                                <small>{{day.date | date: formatDayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" (click)=\"select(view.dates[row*7+col].date, view.dates[row*7+col].events)\"\n                                [ngClass]=\"getHighlightClass(view.dates[row*7+col])\">{{view.dates[row*7+col].label}}\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table *ngIf=\"viewIndex!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr class=\"text-center\">\n                            <th *ngFor=\"let day of view.dates.slice(0,7)\">\n                                <small>{{day.date | date: formatDayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\n                                {{view.dates[row*7+col].label}}\n                            </td>\n                        <tr>\n                        </tbody>\n                    </table>\n                </ion-slide>\n            </ion-slides>\n            <ion-list class=\"event-detail-container2\" has-bouncing=\"false\" *ngIf=\"showEventDetail\" overflow-scroll=\"false\">\n                <ion-item *ngFor=\"let event of selectedDate?.events\" (click)=\"eventSelected(event)\">\n                        <span *ngIf=\"!event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{event.startTime|date: 'HH:mm'}}\n                            -\n                            {{event.endTime|date: 'HH:mm'}}\n                        </span>\n                    <span *ngIf=\"event.allDay\" class=\"monthview-eventdetail-timecolumn\">All day</span>\n                    <span class=\"event-detail\">  |  {{event.title}}</span>\n                </ion-item>\n                <ion-item *ngIf=\"!selectedDate?.events\">\n                    <td class=\"no-events-label\">{{noEventsLabel}}</td>\n                </ion-item>\n            </ion-list>\n        </div>\n    `,\n    styles: [`\n        .text-muted {\n          color: #999;\n        }\n\n        .table-fixed {\n          table-layout: fixed;\n        }\n\n        .table {\n          width: 100%;\n          max-width: 100%;\n          background-color: transparent;\n        }\n\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\n        .table > tbody > tr > td, .table > tfoot > tr > td {\n          padding: 8px;\n          line-height: 20px;\n          vertical-align: top;\n        }\n\n        .table > thead > tr > th {\n          vertical-align: bottom;\n          border-bottom: 2px solid #ddd;\n        }\n\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\n          border-top: 0\n        }\n\n        .table > tbody + tbody {\n          border-top: 2px solid #ddd;\n        }\n\n        .table-bordered {\n          border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\n          border: 1px solid #ddd;\n        }\n\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\n          border-bottom-width: 2px;\n        }\n\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\n          background-color: #f9f9f9\n        }\n\n        .no-event-label {\n          font-weight: bold;\n          color: darkgrey;\n          text-align: center;\n        }\n\n        .event-detail-container {\n          border-top: 2px darkgrey solid;\n          margin-top: 262px;\n        }\n\n        .event-detail {\n          cursor: pointer;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n        }\n\n        .monthview-primary-with-event {\n          background-color: #3a87ad;\n          color: white;\n        }\n\n        .monthview-current {\n          background-color: lightgrey;\n        }\n\n        .monthview-selected {\n          background-color: #009900;\n          color: white;\n        }\n\n        .monthview-eventdetail-timecolumn {\n          width: 110px;\n          overflow: hidden;\n        }\n\n        .monthview-datetable th {\n          text-align: center;\n        }\n\n        .monthview-datetable td {\n          cursor: pointer;\n          text-align: center;\n        }\n\n        .monthview-secondary-with-event {\n          background-color: #d9edf7;\n        }\n\n        ::-webkit-scrollbar,\n        *::-webkit-scrollbar {\n          display: none;\n        }\n\n        @media (max-width: 750px) {\n          .table > tbody > tr > td.calendar-hour-column {\n            padding-left: 0;\n            padding-right: 0;\n            vertical-align: middle;\n            line-height: 12px;\n          }\n        }\n    `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: CalendarService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'slider': [{ type: ViewChild, args: ['monthSlider', ] },],\n'formatDay': [{ type: Input },],\n'formatDayHeader': [{ type: Input },],\n'formatMonthTitle': [{ type: Input },],\n'eventSource': [{ type: Input },],\n'startingDayMonth': [{ type: Input },],\n'showEventDetail': [{ type: Input },],\n'noEventsLabel': [{ type: Input },],\n'onRangeChanged': [{ type: Output },],\n'onEventSelected': [{ type: Output },],\n'onTimeSelected': [{ type: Output },],\n'onTitleChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}