{"version":3,"file":"calendar.service.js","sourceRoot":"","sources":["../src/calendar.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs/Rx';\n\nimport { ICalendarComponent, IView, CalendarMode, QueryMode } from './calendar';\n\n\nexport class CalendarService {\n    queryMode: QueryMode;\n    currentDateChanged$: Observable<Date>;\n\n    private _currentDate: Date;\n    private currentDateChanged = new Subject<Date>();\n\n    constructor() {\n        this.currentDateChanged$ = this.currentDateChanged.asObservable();\n    }\n\n    setCurrentDateWithoutEvent(val: Date) {\n        this._currentDate = val;\n    }\n\n    get currentDate(): Date {\n        return this._currentDate;\n    }\n    set currentDate(val: Date) {\n        this._currentDate = val;\n        this.currentDateChanged.next(val);\n    }\n\n    rangeChanged(component: ICalendarComponent) {\n        if (this.queryMode === 'local') {\n            if (component.eventSource && component.onDataLoaded) {\n                component.onDataLoaded();\n            }\n        } else if (this.queryMode === 'remote') {\n            component.onRangeChanged.emit(component.range);\n        }\n    }\n\n    private getStep(mode: CalendarMode): { years: number; months: number; days: number; } {\n        switch (mode) {\n            case 'month':\n                return {\n                    years: 0,\n                    months: 1,\n                    days: 0\n                };\n            case 'week':\n                return {\n                    years: 0,\n                    months: 0,\n                    days: 7\n                };\n            case 'day':\n                return {\n                    years: 0,\n                    months: 0,\n                    days: 1\n                };\n        }\n    }\n\n    getAdjacentCalendarDate(mode: CalendarMode, direction: number): Date {\n        let step = this.getStep(mode);\n        let calculateCalendarDate = new Date(this.currentDate.getTime()),\n            year = calculateCalendarDate.getFullYear() + direction * step.years,\n            month = calculateCalendarDate.getMonth() + direction * step.months,\n            date = calculateCalendarDate.getDate() + direction * step.days;\n\n        calculateCalendarDate.setFullYear(year, month, date);\n\n        if (mode === 'month') {\n            let firstDayInNextMonth = new Date(year, month + 1, 1);\n            if (firstDayInNextMonth.getTime() <= calculateCalendarDate.getTime()) {\n                calculateCalendarDate = new Date(firstDayInNextMonth.getTime() - 24 * 60 * 60 * 1000);\n            }\n        }\n        return calculateCalendarDate;\n    }\n\n    getAdjacentViewStartTime(component: ICalendarComponent, direction: number): Date {\n        let adjacentCalendarDate = this.getAdjacentCalendarDate(component.mode, direction);\n        return component.getRange(adjacentCalendarDate).startTime;\n    };\n\n    populateAdjacentViews(component: ICalendarComponent) {\n        let currentViewStartDate: Date,\n            currentViewData: IView[],\n            toUpdateViewIndex: number,\n            currentViewIndex = component.currentViewIndex;\n\n        if (component.direction === 1) {\n            currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n            toUpdateViewIndex = (currentViewIndex + 1) % 3;\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n        } else if (component.direction === -1) {\n            currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n            toUpdateViewIndex = (currentViewIndex + 2) % 3;\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n        } else {\n            if (!component.views) {\n                currentViewData = [];\n                currentViewStartDate = component.range.startTime;\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                component.views = currentViewData;\n            } else {\n                currentViewStartDate = component.range.startTime;\n                component.views[currentViewIndex] = component.getViewData(currentViewStartDate);\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n                toUpdateViewIndex = (currentViewIndex + 2) % 3;\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n                toUpdateViewIndex = (currentViewIndex + 1) % 3;\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}